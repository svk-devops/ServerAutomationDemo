trigger:
  branches:
    include:
      - master
  paths:
    include:
      - server.json
      - server.parameters.json

pool:
  vmImage: "ubuntu-latest"

variables:
  - group: ServerAutomationDemo
  - name: azure_resource_group_name
    value: "ServerProvisionTesting-$(Build.BuildId)"
  - name: subscription_id
    value: "c80eb516-ac45-4df1-ae1f-c8c17bf10a72"
  - name: application_id
    value: "0d5cc907-cea4-4f40-826b-12d93d55d572"
  - name: tenant_id
    value: "6726ea9f-344c-4609-9af9-35e8d9d1663f"

steps:
  - task: PowerShell@2
    inputs:
      filePath: "connect-azure.ps1"
      arguments: '-ServicePrincipalPassword "$(ServerAutomationDemo-AppPw)" -SubscriptionId $(subscription_id) -ApplicationId $(application_id) -TenantId $(tenant_id)'
  - task: PowerShell@2
    inputs:
      targetType: "inline"
      script: New-AzResourceGroup -Name $(azure_resource_group_name) -Location westeurope -Force
  - task: Pester@0
    inputs:
      scriptFolder: "@{Path='$(System.DefaultWorkingDirectory)/server.template.tests.ps1'; Parameters=@{ResourceGroupName='$(azure_resource_group_name)'}}"
      resultsFile: "$(System.DefaultWorkingDirectory)/server.template.tests.XML"
      usePSCore: true
      run32Bit: False
  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: "Resource Group"
      azureResourceManagerConnection: "ARM"
      subscriptionId: "$(subscription_id)"
      action: "Create Or Update Resource Group"
      resourceGroupName: $(azure_resource_group_name)
      location: "West Europe"
      templateLocation: "Linked artifact"
      csmFile: "server.json"
      csmParametersFile: "server.parameters.json"
      deploymentMode: "Incremental"
      deploymentOutputs: "arm_output"
  - task: Pester@0
    inputs:
      scriptFolder: "@{Path='$(System.DefaultWorkingDirectory)/server.infrastructure.tests.ps1'; Parameters=@{ArmDeploymentJsonOutput='$(arm_output)'}}"
      resultsFile: "$(System.DefaultWorkingDirectory)/server.infrastructure.tests.XML"
      usePSCore: true
      run32Bit: False
  # - task: PowerShell@2
  #   inputs:
  #     targetType: "inline"
  #     script: Get-AzResourceGroup -Name $(azure_resource_group_name) | Remove-AzResourceGroup -Force
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: "NUnit"
      testResultsFiles: "$(System.DefaultWorkingDirectory)/server.infrastructure.tests.XML"
      failTaskOnFailedTests: true

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: "NUnit"
      testResultsFiles: "$(System.DefaultWorkingDirectory)/server.template.tests.XML"
      failTaskOnFailedTests: true
